// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> should have default onOverlayClick 1`] = `undefined`;

exports[`<Modal /> should render close modal withouth a problem 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

<Modal
  active={false}
  height="35rem"
  onOverlayClick={[Function]}
  width="50rem"
>
  <Portal>
    <Portal
      containerInfo={
        .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

<div>
          <div
            class="c0"
          />
        </div>
      }
    >
      <styled.div>
        <div
          className="c0"
        >
          <PoseGroup
            flipMove={true}
          >
            <Transition
              enterAfterExit={false}
              enterPose="enter"
              exitPose="exit"
              flipMove={true}
              preEnterPose="exit"
            />
          </PoseGroup>
        </div>
      </styled.div>
    </Portal>
  </Portal>
</Modal>
`;

exports[`<Modal /> should render open modal width a title 1`] = `
.c3 {
  height: 6rem;
  border-bottom: 0.1rem solid hsl(207,22%,90%);
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  width: 100%;
  height: auto;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: initial;
}

.c7 {
  margin-left: 0.7rem;
}

.c7:first-child {
  margin-left: 0;
}

.c7:last-child {
  margin-right: 0;
}

.c6 {
  height: 6rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  height: 100%;
  width: 100%;
  min-width: 100%;
  min-height: 100%;
  background-color: rgba(0,0,0,0.5);
}

.c2 {
  z-index: 999;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 35rem;
  width: 50rem;
  left: calc(50% - 25rem);
  top: calc(50% - 17.5rem);
  padding: 0 1.5rem;
  color: hsl(213,17%,20%);
  font-size: 1.4rem;
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
}

.c4 {
  text-transform: uppercase;
  font-weight: 600;
  font-size: 1.4rem;
  line-height: 1.4rem;
}

@media (min-width:0em) and (max-width:35.9375em) {
  .c2 {
    width: 90%;
    margin-left: calc(-90% / 2);
  }
}

<Modal
  active={true}
  height="35rem"
  onOverlayClick={[Function]}
  width="50rem"
>
  <Portal>
    <Portal
      containerInfo={
        .c3 {
  height: 6rem;
  border-bottom: 0.1rem solid hsl(207,22%,90%);
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  width: 100%;
  height: auto;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: initial;
}

.c7 {
  margin-left: 0.7rem;
}

.c7:first-child {
  margin-left: 0;
}

.c7:last-child {
  margin-right: 0;
}

.c6 {
  height: 6rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  height: 100%;
  width: 100%;
  min-width: 100%;
  min-height: 100%;
  background-color: rgba(0,0,0,0.5);
}

.c2 {
  z-index: 999;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 35rem;
  width: 50rem;
  left: calc(50% - 25rem);
  top: calc(50% - 17.5rem);
  padding: 0 1.5rem;
  color: hsl(213,17%,20%);
  font-size: 1.4rem;
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
}

.c4 {
  text-transform: uppercase;
  font-weight: 600;
  font-size: 1.4rem;
  line-height: 1.4rem;
}

@media (min-width:0em) and (max-width:35.9375em) {
  .c2 {
    width: 90%;
    margin-left: calc(-90% / 2);
  }
}

<div>
          <div
            class="c0"
          >
            <div
              class="c1"
              data-test="overlay"
              style=""
            />
            <dialog
              class="c2"
              height="35rem"
              style="transform: ;transform: none;"
              width="50rem"
            >
              <div
                class="c3"
              >
                <p
                  class="c4"
                >
                  My title
                </p>
              </div>
              <div
                class="c5"
              >
                Body
              </div>
              <div
                alignment="left"
                class="c6"
              >
                <div
                  class="c7"
                >
                  Footer
                </div>
              </div>
            </dialog>
          </div>
        </div>
      }
    >
      <styled.div>
        <div
          className="c0"
        >
          <PoseGroup
            flipMove={true}
          >
            <Transition
              enterAfterExit={false}
              enterPose="enter"
              exitPose="exit"
              flipMove={true}
              preEnterPose="exit"
            >
              <Component
                _pose="enter"
                data-test="overlay"
                key="Overlay"
                onClick={[Function]}
              >
                <PoseElement
                  _pose="enter"
                  data-test="overlay"
                  elementType={[Function]}
                  onClick={[Function]}
                  poseConfig={
                    Object {
                      "enter": Object {
                        "opacity": 1,
                      },
                      "exit": Object {
                        "opacity": 0,
                      },
                    }
                  }
                >
                  <styled.div
                    data-test="overlay"
                    hostRef={[Function]}
                    innerRef={[Function]}
                    onClick={[Function]}
                  >
                    <div
                      className="c1"
                      data-test="overlay"
                      onClick={[Function]}
                    />
                  </styled.div>
                </PoseElement>
              </Component>
              <Component
                _pose="enter"
                height="35rem"
                key="Dialog"
                width="50rem"
              >
                <PoseElement
                  _pose="enter"
                  elementType={[Function]}
                  height="35rem"
                  poseConfig={
                    Object {
                      "enter": Object {
                        "delay": 150,
                        "opacity": 1,
                        "transition": Object {
                          "default": Object {
                            "duration": 150,
                          },
                          "y": Object {
                            "damping": 28,
                            "stiffness": 900,
                            "type": "spring",
                          },
                        },
                        "y": 0,
                      },
                      "exit": Object {
                        "opacity": 0,
                        "transition": Object {
                          "duration": 150,
                        },
                        "y": 50,
                      },
                    }
                  }
                  width="50rem"
                >
                  <styled.dialog
                    height="35rem"
                    hostRef={[Function]}
                    innerRef={[Function]}
                    width="50rem"
                  >
                    <dialog
                      className="c2"
                      height="35rem"
                      width="50rem"
                    >
                      <Styled(ModalHeader)>
                        <ModalHeader
                          className="c3"
                        >
                          <div
                            className="c3"
                          >
                            <styled.p>
                              <p
                                className="c4"
                              >
                                My title
                              </p>
                            </styled.p>
                          </div>
                        </ModalHeader>
                      </Styled(ModalHeader)>
                      <Styled(ModalBody)>
                        <ModalBody
                          className="c5"
                        >
                          <div
                            className="c5"
                          >
                            Body
                          </div>
                        </ModalBody>
                      </Styled(ModalBody)>
                      <Styled(ModalFooter)>
                        <ModalFooter
                          alignment="left"
                          className="c6"
                        >
                          <div
                            alignment="left"
                            className="c6"
                          >
                            <styled.div
                              key="0/.0"
                            >
                              <div
                                className="c7"
                              >
                                Footer
                              </div>
                            </styled.div>
                          </div>
                        </ModalFooter>
                      </Styled(ModalFooter)>
                    </dialog>
                  </styled.dialog>
                </PoseElement>
              </Component>
            </Transition>
          </PoseGroup>
        </div>
      </styled.div>
    </Portal>
  </Portal>
</Modal>
`;

exports[`<Modal /> should render open modal withouth a problem 1`] = `
.c3 {
  height: 6rem;
  border-bottom: 0.1rem solid hsl(207,22%,90%);
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  width: 100%;
  height: auto;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: initial;
}

.c6 {
  margin-left: 0.7rem;
}

.c6:first-child {
  margin-left: 0;
}

.c6:last-child {
  margin-right: 0;
}

.c5 {
  height: 6rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  height: 100%;
  width: 100%;
  min-width: 100%;
  min-height: 100%;
  background-color: rgba(0,0,0,0.5);
}

.c2 {
  z-index: 999;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 35rem;
  width: 50rem;
  left: calc(50% - 25rem);
  top: calc(50% - 17.5rem);
  padding: 0 1.5rem;
  color: hsl(213,17%,20%);
  font-size: 1.4rem;
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
}

@media (min-width:0em) and (max-width:35.9375em) {
  .c2 {
    width: 90%;
    margin-left: calc(-90% / 2);
  }
}

<Modal
  active={true}
  height="35rem"
  onOverlayClick={[Function]}
  width="50rem"
>
  <Portal>
    <Portal
      containerInfo={
        .c3 {
  height: 6rem;
  border-bottom: 0.1rem solid hsl(207,22%,90%);
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  width: 100%;
  height: auto;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: initial;
}

.c6 {
  margin-left: 0.7rem;
}

.c6:first-child {
  margin-left: 0;
}

.c6:last-child {
  margin-right: 0;
}

.c5 {
  height: 6rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  height: 100%;
  width: 100%;
  min-width: 100%;
  min-height: 100%;
  background-color: rgba(0,0,0,0.5);
}

.c2 {
  z-index: 999;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 35rem;
  width: 50rem;
  left: calc(50% - 25rem);
  top: calc(50% - 17.5rem);
  padding: 0 1.5rem;
  color: hsl(213,17%,20%);
  font-size: 1.4rem;
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
}

@media (min-width:0em) and (max-width:35.9375em) {
  .c2 {
    width: 90%;
    margin-left: calc(-90% / 2);
  }
}

<div>
          <div
            class="c0"
          >
            <div
              class="c1"
              data-test="overlay"
              style=""
            />
            <dialog
              class="c2"
              height="35rem"
              style="transform: ;transform: none;"
              width="50rem"
            >
              <div
                class="c3"
              >
                Header
              </div>
              <div
                class="c4"
              >
                Body
              </div>
              <div
                alignment="left"
                class="c5"
              >
                <div
                  class="c6"
                >
                  Footer
                </div>
              </div>
            </dialog>
          </div>
        </div>
      }
    >
      <styled.div>
        <div
          className="c0"
        >
          <PoseGroup
            flipMove={true}
          >
            <Transition
              enterAfterExit={false}
              enterPose="enter"
              exitPose="exit"
              flipMove={true}
              preEnterPose="exit"
            >
              <Component
                _pose="enter"
                data-test="overlay"
                key="Overlay"
                onClick={[Function]}
              >
                <PoseElement
                  _pose="enter"
                  data-test="overlay"
                  elementType={[Function]}
                  onClick={[Function]}
                  poseConfig={
                    Object {
                      "enter": Object {
                        "opacity": 1,
                      },
                      "exit": Object {
                        "opacity": 0,
                      },
                    }
                  }
                >
                  <styled.div
                    data-test="overlay"
                    hostRef={[Function]}
                    innerRef={[Function]}
                    onClick={[Function]}
                  >
                    <div
                      className="c1"
                      data-test="overlay"
                      onClick={[Function]}
                    />
                  </styled.div>
                </PoseElement>
              </Component>
              <Component
                _pose="enter"
                height="35rem"
                key="Dialog"
                width="50rem"
              >
                <PoseElement
                  _pose="enter"
                  elementType={[Function]}
                  height="35rem"
                  poseConfig={
                    Object {
                      "enter": Object {
                        "delay": 150,
                        "opacity": 1,
                        "transition": Object {
                          "default": Object {
                            "duration": 150,
                          },
                          "y": Object {
                            "damping": 28,
                            "stiffness": 900,
                            "type": "spring",
                          },
                        },
                        "y": 0,
                      },
                      "exit": Object {
                        "opacity": 0,
                        "transition": Object {
                          "duration": 150,
                        },
                        "y": 50,
                      },
                    }
                  }
                  width="50rem"
                >
                  <styled.dialog
                    height="35rem"
                    hostRef={[Function]}
                    innerRef={[Function]}
                    width="50rem"
                  >
                    <dialog
                      className="c2"
                      height="35rem"
                      width="50rem"
                    >
                      <Styled(ModalHeader)>
                        <ModalHeader
                          className="c3"
                        >
                          <div
                            className="c3"
                          >
                            Header
                          </div>
                        </ModalHeader>
                      </Styled(ModalHeader)>
                      <Styled(ModalBody)>
                        <ModalBody
                          className="c4"
                        >
                          <div
                            className="c4"
                          >
                            Body
                          </div>
                        </ModalBody>
                      </Styled(ModalBody)>
                      <Styled(ModalFooter)>
                        <ModalFooter
                          alignment="left"
                          className="c5"
                        >
                          <div
                            alignment="left"
                            className="c5"
                          >
                            <styled.div
                              key="0/.0"
                            >
                              <div
                                className="c6"
                              >
                                Footer
                              </div>
                            </styled.div>
                          </div>
                        </ModalFooter>
                      </Styled(ModalFooter)>
                    </dialog>
                  </styled.dialog>
                </PoseElement>
              </Component>
            </Transition>
          </PoseGroup>
        </div>
      </styled.div>
    </Portal>
  </Portal>
</Modal>
`;
