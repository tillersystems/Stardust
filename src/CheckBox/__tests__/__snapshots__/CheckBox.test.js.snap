// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CheckBox /> should not be checked with change when disabled 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 1.6rem;
  height: 1.6rem;
  margin-right: 0.7rem;
  border: 1px solid hsl(207,22%,90%);
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
  -webkit-transition: background-color ease 0.25s;
  transition: background-color ease 0.25s;
  opacity: 0.4;
  cursor: not-allowed;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  position: relative;
  color: hsl(207,13%,45%);
  opacity: 0.4;
  cursor: not-allowed;
}

.c0 {
  width: 100%;
}

<div
  class="c0"
  data-testid="checkBox"
>
  <label
    class="c1"
    disabled=""
  >
    <div
      class="c2"
      data-testid="checkBoxContainer"
      disabled=""
    >
      <input
        data-testid="checkBoxInput"
        disabled=""
        tabindex="-1"
        type="checkbox"
        value=""
      />
    </div>
    label
  </label>
</div>
`;

exports[`<CheckBox /> should render an initial selected checkbox 1`] = `
.c3 {
  display: inline-block;
  border-image-source: none;
  border-image-width: 0;
  padding: 0;
  font-size: 1rem;
  line-height: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 1.6rem;
  height: 1.6rem;
  margin-right: 0.7rem;
  border: 1px solid hsl(207,22%,90%);
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
  -webkit-transition: background-color ease 0.25s;
  transition: background-color ease 0.25s;
  border: 1px solid #1873a0;
  background: hsl(200,74%,46%) linear-gradient( 0deg, hsla(0,100%,100%,0) 0%, hsla(0,100%,100%,0.1) 100% );
  box-shadow: inset 0 0.2rem 0 0 hsla(0,100%,100%,0.1);
  -webkit-transition: border ease 0.25s;
  transition: border ease 0.25s;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  position: relative;
  color: hsl(207,13%,45%);
  color: hsl(200,74%,46%);
  font-weight: 500;
}

.c0 {
  width: 100%;
}

<div
  class="c0"
  data-testid="checkBox"
>
  <label
    class="c1"
  >
    <div
      class="c2"
      data-testid="checkBoxContainer"
    >
      <div
        class="c3"
        data-testid="iconContainer"
        height="1rem"
        width="1rem"
      >
        <svg
          data-testid="iconSvg"
          height="1rem"
          style="display: block;"
          viewBox="0 0 512 512"
          width="1rem"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M411.582 134.248c8.33-8.33 21.838-8.33 30.17 0 8.33 8.332 8.33 21.84 0 30.17L207.085 399.085c-8.331 8.331-21.839 8.331-30.17 0L70.248 292.418c-8.33-8.33-8.33-21.838 0-30.17 8.332-8.33 21.84-8.33 30.17 0L192 353.83l219.582-219.582z"
            data-testid="iconSvgPath"
            fill="hsl(0,100%,100%)"
            fill-rule="evenodd"
          />
        </svg>
      </div>
      <input
        checked=""
        data-testid="checkBoxInput"
        tabindex="0"
        type="checkbox"
        value=""
      />
    </div>
    label
  </label>
</div>
`;

exports[`<CheckBox /> should render without a problem 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 1.6rem;
  height: 1.6rem;
  margin-right: 0.7rem;
  border: 1px solid hsl(207,22%,90%);
  border-radius: 0.4rem;
  background: hsl(0,100%,100%);
  -webkit-transition: background-color ease 0.25s;
  transition: background-color ease 0.25s;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  position: relative;
  color: hsl(207,13%,45%);
}

.c0 {
  width: 100%;
}

<div
  class="c0"
  data-testid="checkBox"
>
  <label
    class="c1"
  >
    <div
      class="c2"
      data-testid="checkBoxContainer"
    >
      <input
        data-testid="checkBoxInput"
        tabindex="0"
        type="checkbox"
        value=""
      />
    </div>
    label
  </label>
</div>
`;

exports[`<CheckBox /> should toggle 1`] = `
<input
  data-testid="checkBoxInput"
  tabindex="0"
  type="checkbox"
  value=""
/>
`;

exports[`<CheckBox /> should toggle 2`] = `
<input
  data-testid="checkBoxInput"
  tabindex="0"
  type="checkbox"
  value=""
/>
`;
