// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Logo /> should render withouth a problem 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 button {
  border-radius: 0;
}

.c0 button:first-of-type {
  border-top-left-radius: 0.4rem;
  border-bottom-left-radius: 0.4rem;
  border-right: 1px solid #e1e7ec;
}

.c0 button:first-of-type:hover {
  border-right: 1px solid #e1e7ec;
}

.c0 button:nth-child(n) {
  border-right: 1px solid #e1e7ec;
  border-left: 0;
}

.c0 button:nth-child(n):hover {
  border-right: 1px solid #e1e7ec;
  border-left: 0;
}

.c0 button:last-of-type {
  border-top-right-radius: 0.4rem;
  border-bottom-right-radius: 0.4rem;
  border-left: 0;
}

.c0 button:last-of-type:hover {
  border-left: 0;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 0;
  margin-bottom: 0;
  padding: 0.7rem 1.4rem;
  border-radius: 0.4rem;
  font-size: calc(1.2rem + 0.2rem);
  line-height: calc(1.2rem + 0.2rem);
  color: hsl(0,100%,100%);
  border: 1px solid;
  -webkit-transition: background 200ms ease;
  transition: background 200ms ease;
  cursor: pointer;
  outline: none;
  padding: 1.2rem 1.5rem;
  color: #dbdfe6;
  background: hsl(0,100%,100%);
  border: 1px solid hsl(218,18%,91%);
  color: hsl(206,23%,69%);
  background: hsl(0,100%,100%);
  border: 1px solid hsl(218,18%,91%);
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.04);
}

.c1:hover:not([disabled]) {
  background: #dbdfe6;
  border: 1px solid #dbdfe6;
  background: hsl(218,29%,95%);
  border: 1px solid hsl(218,18%,91%);
}

.c1:hover:not([disabled]) svg > path {
  fill: hsl(0,100%,100%);
}

<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "lg": 992,
        "md": 768,
        "sm": 576,
        "xl": 1200,
        "xs": 0,
      },
      "dimensions": Object {
        "big": "3.1rem",
        "bigInt": 3.1,
        "huge": "4.5rem",
        "hugeInt": 4.5,
        "medium": "1.5rem",
        "mediumInt": 1.5,
        "radius": "0.4rem",
        "radiusInt": 0.4,
        "small": "0.7rem",
        "smallInt": 0.7,
        "tiny": "0.3rem",
        "tinyInt": 0.3,
      },
      "fonts": Object {
        "family": "\\"Open Sans\\", Helvetica, Arial, sans-serif",
        "size": Object {
          "big": "3.2rem",
          "bigInt": 3.2,
          "huge": "6.4rem",
          "hugeInt": 6.4,
          "medium": "1.2rem",
          "mediumInt": 1.2,
          "small": "0.7rem",
          "smallInt": 0.7,
          "tiny": "0.3rem",
          "tinyInt": 0.3,
        },
        "spacing": Object {
          "big": "1.5px",
          "medium": "1px",
          "small": "0.5px",
        },
        "weight": Object {
          "normal": 400,
          "thick": 600,
          "thin": 200,
        },
      },
      "palette": Object {
        "alizarin": "hsl(6, 78%, 57%)",
        "anthracite": "hsl(213, 17%, 20%)",
        "black": "hsl(0, 0%, 0%)",
        "blackLight": "hsl(213, 17%, 20%)",
        "blue": "hsl(200, 74%, 46%)",
        "bodyBackground": "hsl(218, 29%, 95%)",
        "carrot": "hsl(28, 80%, 52%)",
        "clay": "hsl(215, 17%, 26%)",
        "darkBlue": "#1c88bf",
        "darkGray": "#dbdfe6",
        "darkGreen": "#7fbf3b",
        "darkRed": "#ea6151",
        "emerald": "hsl(145, 63%, 49%)",
        "fadeBlue": "hsl(210, 50%, 98%)",
        "failure": Object {
          "back": "hsl(6, 79%, 65%)",
          "darkBack": "#ea6151",
          "darkFore": "#f7f7f7",
          "fore": "hsl(0, 100%, 100%)",
          "lightBack": "#f1978d",
          "lightFore": "#fff",
        },
        "googleBrandRed": "#ea4335",
        "gray": "hsl(218, 18%, 91%)",
        "green": "hsl(89, 53%, 52%)",
        "grey": "hsl(206, 16%, 60%)",
        "greygoose": "hsl(216, 29%, 97%)",
        "lightBlue": "#3baae2",
        "lightGray": "#fff",
        "lightGreen": "#a0d16b",
        "lightRed": "#f1978d",
        "marble": "hsl(206, 23%, 69%)",
        "orange": "hsl(34, 91%, 65%)",
        "primary": Object {
          "back": "hsl(200, 74%, 46%)",
          "darkBack": "#1c88bf",
          "darkFore": "#f7f7f7",
          "fore": "hsl(0, 100%, 100%)",
          "lightBack": "#3baae2",
          "lightFore": "#fff",
        },
        "red": "hsl(6, 79%, 65%)",
        "river": "hsl(204, 70%, 53%)",
        "sand": "hsl(214, 8%, 84%)",
        "secondary": Object {
          "back": "hsl(0, 100%, 100%)",
          "darkBack": "#f7f7f7",
          "darkFore": "#8093a3",
          "fore": "hsl(206, 16%, 60%)",
          "lightBack": "#fff",
          "lightFore": "#a6b4be",
        },
        "success": Object {
          "back": "hsl(89, 53%, 52%)",
          "darkBack": "#7fbf3b",
          "darkFore": "#f7f7f7",
          "fore": "hsl(0, 100%, 100%)",
          "lightBack": "#a0d16b",
          "lightFore": "#fff",
        },
        "turquoise": "hsl(168, 76%, 42%)",
        "white": "hsl(0, 100%, 100%)",
        "wisteria": "hsl(282, 44%, 47%)",
      },
    }
  }
>
  <Styled(ButtonGroup)>
    <ButtonGroup
      className="c0"
    >
      <div
        className="c0"
      >
        <Button
          light={true}
          medium={true}
          onClick={[Function]}
        >
          <Button
            big={false}
            className=""
            disabled={false}
            failure={false}
            fluid={false}
            inverted={false}
            isGoogle={false}
            light={true}
            medium={true}
            onClick={[Function]}
            primary={false}
            rounded={false}
            secondary={false}
            small={false}
            success={false}
            tiny={false}
            type="button"
          >
            <styled.button
              big={false}
              className=""
              disabled={false}
              failure={false}
              fluid={false}
              inverted={false}
              isGoogle={false}
              light={true}
              medium={true}
              onClick={[Function]}
              primary={false}
              rounded={false}
              secondary={false}
              small={false}
              success={false}
              tiny={false}
              type="button"
            >
              <button
                className="c1"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Left
              </button>
            </styled.button>
          </Button>
        </Button>
        <Button
          light={true}
          medium={true}
          onClick={[Function]}
        >
          <Button
            big={false}
            className=""
            disabled={false}
            failure={false}
            fluid={false}
            inverted={false}
            isGoogle={false}
            light={true}
            medium={true}
            onClick={[Function]}
            primary={false}
            rounded={false}
            secondary={false}
            small={false}
            success={false}
            tiny={false}
            type="button"
          >
            <styled.button
              big={false}
              className=""
              disabled={false}
              failure={false}
              fluid={false}
              inverted={false}
              isGoogle={false}
              light={true}
              medium={true}
              onClick={[Function]}
              primary={false}
              rounded={false}
              secondary={false}
              small={false}
              success={false}
              tiny={false}
              type="button"
            >
              <button
                className="c1"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Right
              </button>
            </styled.button>
          </Button>
        </Button>
      </div>
    </ButtonGroup>
  </Styled(ButtonGroup)>
</ThemeProvider>
`;
