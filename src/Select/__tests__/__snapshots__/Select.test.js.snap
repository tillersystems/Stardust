// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Select /> should render without a problem 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

<div
  className="c0"
>
  <styled.h4>
    menu
  </styled.h4>
  <styled.div
    onClick={[Function]}
  >
    Home
    <PoseGroup
      flipMove={true}
    />
    <select
      defaultValue="Home"
    >
      <option
        value="home"
      >
        Home
      </option>
      <option
        value="calendar"
      >
        Calendar
      </option>
      <option
        value="settings"
      >
        Settings
      </option>
      <option
        aside={
          <Styled(Icon)
            color="hsl(207,13%,45%)"
            name="home"
          />
        }
        value="user"
      >
        User
      </option>
    </select>
  </styled.div>
</div>
`;

exports[`<Select /> should render without a problem when dropdown is open 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c1 {
  color: hsl(213,17%,20%);
  font-size: 1.2rem;
  font-weight: 500;
  line-height: 18px;
  text-transform: uppercase;
  padding-bottom: 0.6rem;
}

.c3 {
  border: 1px solid hsl(207,22%,90%);
  border-radius: 4px;
  position: absolute;
  list-style: none;
  top: calc(100% + 0.4rem);
  background-color: hsl(0,100%,100%);
  width: 100%;
  left: 0;
  max-height: 160px;
  overflow-y: auto;
  -webkit-transform-origin: 50% 0%;
  -ms-transform-origin: 50% 0%;
  transform-origin: 50% 0%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  text-align: left;
  padding: 0.8rem 1.2rem;
  height: 38px;
  width: 150px;
  border: 1px solid hsl(207,22%,90%);
  border-radius: 4px;
  background-color: hsl(0,100%,100%);
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.08);
  color: hsl(213,17%,20%);
  position: relative;
}

.c2::after {
  content: '';
  position: absolute;
  right: 14px;
  top: 37%;
  width: 0;
  height: 0;
  border: 0 solid transparent;
  border-right-width: 3px;
  border-left-width: 3px;
  border-bottom: 3px solid hsl(207,13%,45%);
}

.c2::before {
  content: '';
  position: absolute;
  right: 14px;
  bottom: 37%;
  width: 0;
  height: 0;
  border: 0 solid transparent;
  border-left-width: 3px;
  border-right-width: 3px;
  border-top: 3px solid hsl(207,13%,45%);
}

.c2 > select {
  display: none;
}

.c4 {
  padding: 0.8rem 1.6rem;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-shadow: 0 1px 0 0 hsl(207,22%,90%);
}

.c4:last-of-type {
  box-shadow: none;
}

.c5 {
  padding-right: 0.8rem;
}

.c6 {
  display: inline-block;
  border-image-source: none;
  border-image-width: 0;
  padding: 0;
  font-size: 20;
  line-height: 20;
}

<Select
  id="select"
  prefix={null}
  selectedValue={null}
  show={false}
  title="menu"
>
  <styled.div>
    <div
      className="c0"
    >
      <styled.h4>
        <h4
          className="c1"
        >
          menu
        </h4>
      </styled.h4>
      <styled.div
        onClick={[Function]}
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          Home
          <PoseGroup
            flipMove={true}
          >
            <Transition
              enterPose="enter"
              exitPose="exit"
              flipMove={true}
              preEnterPose="exit"
            >
              <Component
                _pose="enter"
                initialPose="exit"
                key="DropdownAnimation"
              >
                <PoseElement
                  _pose="enter"
                  elementType={[Function]}
                  initialPose="exit"
                  poseConfig={
                    Object {
                      "enter": Object {
                        "opacity": 1,
                        "scaleY": 1,
                      },
                      "exit": Object {
                        "opacity": 0,
                        "scaleY": 0,
                        "transition": Object {
                          "opacity": Object {
                            "duration": 250,
                            "ease": "easeOut",
                          },
                        },
                      },
                    }
                  }
                >
                  <styled.ul
                    hostRef={[Function]}
                    innerRef={[Function]}
                  >
                    <ul
                      className="c3"
                    >
                      <Option
                        aside={null}
                        key=".0"
                        onClick={[Function]}
                        value="home"
                      >
                        <styled.li
                          onClick={[Function]}
                          value="home"
                        >
                          <li
                            className="c4"
                            onClick={[Function]}
                            value="home"
                          >
                            Home
                          </li>
                        </styled.li>
                      </Option>
                      <Option
                        aside={null}
                        key=".1"
                        onClick={[Function]}
                        value="calendar"
                      >
                        <styled.li
                          onClick={[Function]}
                          value="calendar"
                        >
                          <li
                            className="c4"
                            onClick={[Function]}
                            value="calendar"
                          >
                            Calendar
                          </li>
                        </styled.li>
                      </Option>
                      <Option
                        aside={null}
                        key=".2"
                        onClick={[Function]}
                        value="settings"
                      >
                        <styled.li
                          onClick={[Function]}
                          value="settings"
                        >
                          <li
                            className="c4"
                            onClick={[Function]}
                            value="settings"
                          >
                            Settings
                          </li>
                        </styled.li>
                      </Option>
                      <Option
                        aside={
                          <Styled(Icon)
                            color="hsl(207,13%,45%)"
                            name="home"
                          />
                        }
                        key=".3"
                        onClick={[Function]}
                        value="user"
                      >
                        <styled.li
                          onClick={[Function]}
                          value="user"
                        >
                          <li
                            className="c4"
                            onClick={[Function]}
                            value="user"
                          >
                            <styled.span>
                              <span
                                className="c5"
                              >
                                <Styled(Icon)
                                  color="hsl(207,13%,45%)"
                                  name="home"
                                >
                                  <Icon
                                    className=""
                                    color="hsl(207,13%,45%)"
                                    height="20"
                                    name="home"
                                    spin={false}
                                    width="20"
                                  >
                                    <styled.div
                                      height="20"
                                      spin={false}
                                      width="20"
                                    >
                                      <div
                                        className="c6"
                                        height="20"
                                        width="20"
                                      >
                                        <svg
                                          height="20"
                                          style={
                                            Object {
                                              "display": "block",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="20"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M341.333 448h64c11.782 0 21.334-9.551 21.334-21.333V202.434L256 69.693 85.333 202.433v224.234c0 11.782 9.552 21.333 21.334 21.333h64V256c0-11.782 9.55-21.333 21.333-21.333h128c11.782 0 21.333 9.55 21.333 21.333v192zm-42.666 0V277.333h-85.334V448h85.334zM50.903 175.16l192-149.333a21.333 21.333 0 0 1 26.194 0l192 149.333a21.333 21.333 0 0 1 8.236 16.84v234.667c0 35.346-28.653 64-64 64H106.667c-35.347 0-64-28.654-64-64V192c0-6.583 3.04-12.798 8.236-16.84z"
                                            fill="hsl(207,13%,45%)"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </div>
                                    </styled.div>
                                  </Icon>
                                </Styled(Icon)>
                              </span>
                            </styled.span>
                            User
                          </li>
                        </styled.li>
                      </Option>
                    </ul>
                  </styled.ul>
                </PoseElement>
              </Component>
            </Transition>
          </PoseGroup>
          <select
            defaultValue="Home"
          >
            <option
              value="home"
            >
              Home
            </option>
            <option
              value="calendar"
            >
              Calendar
            </option>
            <option
              value="settings"
            >
              Settings
            </option>
            <option
              aside={
                <Styled(Icon)
                  color="hsl(207,13%,45%)"
                  name="home"
                />
              }
              value="user"
            >
              User
            </option>
          </select>
        </div>
      </styled.div>
    </div>
  </styled.div>
</Select>
`;

exports[`<Select /> should render without a problem when props is set 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

<div
  className="c0"
>
  <styled.h4>
    menu
  </styled.h4>
  <styled.div
    onClick={[Function]}
  >
    Calendar
    <PoseGroup
      flipMove={true}
    >
      <Component
        key="DropdownAnimation"
      >
        <Option
          aside={null}
          key=".0"
          onClick={[Function]}
          value="home"
        >
          Home
        </Option>
        <Option
          aside={null}
          key=".1"
          onClick={[Function]}
          value="calendar"
        >
          Calendar
        </Option>
        <Option
          aside={null}
          key=".2"
          onClick={[Function]}
          value="settings"
        >
          Settings
        </Option>
        <Option
          aside={
            <Styled(Icon)
              color="hsl(207,13%,45%)"
              name="home"
            />
          }
          key=".3"
          onClick={[Function]}
          value="user"
        >
          User
        </Option>
      </Component>
    </PoseGroup>
    <select
      defaultValue="Calendar"
    >
      <option
        value="home"
      >
        Home
      </option>
      <option
        value="calendar"
      >
        Calendar
      </option>
      <option
        value="settings"
      >
        Settings
      </option>
      <option
        aside={
          <Styled(Icon)
            color="hsl(207,13%,45%)"
            name="home"
          />
        }
        value="user"
      >
        User
      </option>
    </select>
  </styled.div>
</div>
`;

exports[`<Select /> should render without a problem when props selectedValue is unset 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

<div
  className="c0"
>
  <styled.h4>
    menu
  </styled.h4>
  <styled.div
    onClick={[Function]}
  >
    Home
    <PoseGroup
      flipMove={true}
    />
    <select
      defaultValue="Home"
    >
      <option
        value="home"
      >
        Home
      </option>
      <option
        value="calendar"
      >
        Calendar
      </option>
      <option
        value="settings"
      >
        Settings
      </option>
      <option
        aside={
          <Styled(Icon)
            color="hsl(207,13%,45%)"
            name="home"
          />
        }
        value="user"
      >
        User
      </option>
    </select>
  </styled.div>
</div>
`;

exports[`<Select /> should render without a problem when settings is preselected and dropdown is showed 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

<div
  className="c0"
>
  <styled.h4>
    menu
  </styled.h4>
  <styled.div
    onClick={[Function]}
  >
    Settings
    <PoseGroup
      flipMove={true}
    >
      <Component
        key="DropdownAnimation"
      >
        <Option
          aside={null}
          key=".0"
          onClick={[Function]}
          value="home"
        >
          Home
        </Option>
        <Option
          aside={null}
          key=".1"
          onClick={[Function]}
          value="calendar"
        >
          Calendar
        </Option>
        <Option
          aside={null}
          key=".2"
          onClick={[Function]}
          value="settings"
        >
          Settings
        </Option>
        <Option
          aside={
            <Styled(Icon)
              color="hsl(207,13%,45%)"
              name="home"
            />
          }
          key=".3"
          onClick={[Function]}
          value="user"
        >
          User
        </Option>
      </Component>
    </PoseGroup>
    <select
      defaultValue="Settings"
    >
      <option
        value="home"
      >
        Home
      </option>
      <option
        value="calendar"
      >
        Calendar
      </option>
      <option
        value="settings"
      >
        Settings
      </option>
      <option
        aside={
          <Styled(Icon)
            color="hsl(207,13%,45%)"
            name="home"
          />
        }
        value="user"
      >
        User
      </option>
    </select>
  </styled.div>
</div>
`;
